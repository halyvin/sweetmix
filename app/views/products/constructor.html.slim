.main role="content"
  h1.title = "Создай свой " + @category.name(1)
  .wrap.content
    .steps
      a.step href="#{products_counstructor_path(@category.slug)}" class="#{@pack.nil? ? 'current' : ''}" data-id="packs" Упаковка

      - if @pack.nil?
        span.step.disable data-id="basis" = "Основа для " + @category.name(5)
      - else
        a.step href="#{products_counstructor_path(@category.slug, { pack: @pack })}" class="#{@basis.nil? ? 'current' : ''}" data-id="basis" = "Основа для " + @category.name(5)

      - if @basis.nil?
        span.step.disable data-id="ingredients" Ингредиенты
      - else
        a.step.current href="#{products_counstructor_path(@category.slug, { pack: @pack, basis: @basis })}" data-id="basis" Ингредиенты

    .steps_shadow
    - if @pack.nil?
      ul.steps_content.packs.current
        - @category.packs.each do |pack|
          li.pack_item
            h2.title = pack.name
            .weight = "Вес #{pack.capacity}г"
            .pack_pic_wrapper = image_tag pack.image.url, :class => "pack_pic"
            a.btn.link_to_next_step href="?pack=#{pack.id}" Выбрать
    - elsif @basis.nil?
      .steps_content.basis.current
        ul.basis_list
          - @pack.bases_packs_relations.includes(:product_basis).each do |basis_pack_relation|
            - basis = basis_pack_relation.product_basis
            li.basis_item
              .basis_consist
                - if basis.composition.present?
                  h2.title Состав:
                  ul.basis_consist_list
                    - basis.composition.split("\n").each do |composline|
                      li.basis_consist_item = composline
              .basis_func
                = image_tag basis.image.url, :class => "basis_pic"
                span.basis_price = "%gр" % basis_pack_relation.price
                a.btn.link_to_next_step href="#{url_for(params.merge(basis: basis.id))}" Выбрать
              .basis_desc
                h2.title = basis.name
                p = basis.descr
    - else
      .steps_content.ingredients.current
        aside.ingredients_aside
          h2.title Основа:
          / TODO
          / select.select_pack
          /   -# @pack.bases.each do |basis|
          /     option value="#{basis.id}" selected=(basis == @basis) = basis.name
          p = @basis.name
          p: br
          

          h2.title Упаковка:
          / TODO
          / select name="select_basis"
          /   -# @category.packs.each do |pack|
          /     option value="#{pack.id}" selected=(pack == @pack) = pack.name
          p = @pack.name
          p: br

          h2.title Ингридиенты:
          ul.units_list
            - (0..7).each do |nevermind|
              li.unit data-allready-checked-size="0"
                img src="" alt="" class="unit_pic"
                ul.unit_currents_list
                  li.unit_item
                  li.unit_item
                  li.unit_item

          h2.title Пищевая ценность на 100г:
          ul class="nutritional_value_list"
            li.nutritional_value_item
              span.microelem Белки
              span.microelem_value.proteins#total-proteins = "%gг" % @basis.proteins
            li.nutritional_value_item
              span.microelem Жиры
              span.microelem_value.fats#total-fats = "%gг" % @basis.fats
            li.nutritional_value_item
              span.microelem Углеводы
              span.microelem_value.carbohydrates#total-carbohydrates = "%gг" % @basis.carbohydrates
            li.nutritional_value_item
              span.microelem Ккал
              span.microelem_value.calories#total-calories = "%g" % @basis.calories

          input.btn type="submit" value="В корзину"
          ul.totals_list
            li.total_item
              ' Вес
              span.total_value#total-weight = "%gг" % @basis.weight_for(@pack)
              '  /
              span.total_value#max-capacity = "%gг" % @pack.capacity
            li.total_item
              ' Стоимость
              span.total_value#total-price = "%gр" % @basis.price_for(@pack)

        .ingredients_content
          - it_is_first = true
          - @ingridient_structured.each do |strcyy|
            - ingtype = strcyy[:ing_type]
            - if strcyy[:ingridients].any?
              input id="list#{ingtype.id}" type="radio" name="ingredients" value="list#{ingtype.id}" checked=it_is_first
              - it_is_first = false
              label.group_label for="list#{ingtype.id}" = ingtype.name
              ul.checked_ingedients class="list#{ingtype.id}"
                - strcyy[:ingridients].each do |ing|
                  li.ingredients_item data-checked-count="0" data-id="ing#{ing.id}" data-price="#{ing.price_for(@pack)}" data-weight="#{ing.weight_for(@pack)}" data-proteins="#{ing.proteins}" data-fats="#{ing.fats}" data-carbohydrates="#{ing.carbohydrates}" data-calories="#{ing.calories}"
                    .ingredient_pic_wrap = image_tag ing.image.url, :class => "ingredient_pic"
                    .ingredient_name
                      =' ing.name
                      .ing_desc_wrap
                        label.ing_desc_label for="ing#{ing.id}" i
                        input.ing_desc_checker id="ing#{ing.id}" type="checkbox" name="ingrediens"
                        .ing_desc_wrapper
                          label.ing_desc_label_closer for="ing#{ing.id}"
                          h2.title = ing.name
                          = image_tag ing.image.url, size: '48x48', :class => "ing_desc_img"
                          - if ing.descr.present?
                            p = ing.descr
                          - else
                            p Описания нет
                    .ingredient_price = "%gр" % ing.price_for(@pack)

    .submit_wrap.elems_centered
      = link_to "Посмотреть готовые рецепты", products_path(@category.slug), :class => "btn"
